1.它提供了对集合对象进行一系列操作的新方式，包括筛选、排序、聚合等操作。Stream API允许开发者以声明式的方式处理数据集合，
这使得代码更加简洁、功能更强大，并且能够更高效地利用多核处理器的并行处理能力。

2.Stream 不是数据结构，它并不保存数据，而是代表一个计算过程，可以对数据序列执行操作。

3.Stream 的操作可以分为中间操作和终止操作：

4.中间操作（Intermediate Operations）: 这些操作会返回一个新的Stream，它们是惰性求值的，即不会立即执行，只有在需要的时候才会触发实际的计算。
常见的中间操作包括 filter（过滤）、map（映射）、sorted（排序）等。

5.终止操作（Terminal Operations）: 这些操作会消耗Stream并产生一个最终的结果。终止操作执行后，Stream不能再次被使用。
常见的终止操作包括 forEach（遍历）、collect（收集）、reduce（归约）、findFirst（找到第一个元素）等。

6.此外，Stream API还支持并行处理，通过 parallelStream() 方法可以创建一个并行Stream，这在处理大数据集时可以显著提高性能。


Stream使用的步骤：
1.获取数据源：比如说数组、集合等
2.对这个数据源进行过滤、排序等操作
3.将处理过后的数据进行去重、获取对应的结果






